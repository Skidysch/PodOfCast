# Generated by Django 5.0.6 on 2024-07-14 09:49

import django.core.validators
import django.db.models.deletion
import podcasts.mixins
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AudioFile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bitrate', models.PositiveIntegerField()),
                ('url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
            bases=(models.Model, podcasts.mixins.GetListOfInstancesByFieldMixin),
        ),
        migrations.CreateModel(
            name='CoverImage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('height', models.PositiveIntegerField()),
                ('width', models.PositiveIntegerField()),
                ('url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('user_id', models.UUIDField()),
                ('rating', models.IntegerField()),
                ('comment', models.TextField(max_length=1000)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('polymorphic_ctype', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='polymorphic_%(app_label)s.%(class)s_set+', to='contenttypes.contenttype')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(choices=[('en-US', 'English (United States)'), ('es-ES', 'Spanish (Spain)'), ('fr-FR', 'French (France)'), ('de-DE', 'German (Germany)'), ('zh-CN', 'Chinese (China)'), ('ru-RU', 'Russian (Russia)')], max_length=5, unique=True, validators=[django.core.validators.RegexValidator(message='Language code must be in the format "xx-XX".', regex='^[a-z]{2}-[A-Z]{2}$')])),
            ],
            bases=(models.Model, podcasts.mixins.GetListOfInstancesByFieldMixin),
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            bases=(models.Model, podcasts.mixins.GetListOfInstancesByFieldMixin),
        ),
        migrations.CreateModel(
            name='Podcast',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(max_length=1000)),
                ('author', models.UUIDField(blank=True, null=True)),
                ('publisher', models.CharField(blank=True, max_length=255, null=True)),
                ('source', models.CharField(choices=[('user_generated', 'User Generated'), ('spotify', 'Spotify'), ('other', 'Other')], default='user_generated', max_length=15)),
                ('publish_date', models.DateTimeField(auto_now_add=True)),
                ('rss_feed_url', models.URLField(blank=True, null=True)),
                ('website_url', models.URLField(blank=True, null=True)),
                ('explicit_content', models.BooleanField(default=False)),
                ('average_rating', models.FloatField(default=0.0)),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('categories', models.ManyToManyField(blank=True, related_name='podcasts', to='podcasts.category')),
                ('cover_images', models.ManyToManyField(blank=True, related_name='podcast', to='podcasts.coverimage')),
                ('languages', models.ManyToManyField(blank=True, related_name='podcasts', to='podcasts.language')),
                ('tags', models.ManyToManyField(blank=True, related_name='podcasts', to='podcasts.tag')),
            ],
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(max_length=1000)),
                ('publish_date', models.DateTimeField(auto_now_add=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('is_external', models.BooleanField(default=False)),
                ('external_url', models.URLField(blank=True, null=True)),
                ('episode_number', models.IntegerField()),
                ('season_number', models.IntegerField()),
                ('explicit_content', models.BooleanField(default=False)),
                ('average_rating', models.FloatField(default=0.0)),
                ('total_reviews', models.PositiveIntegerField(default=0)),
                ('audio_file', models.ManyToManyField(blank=True, related_name='episode', to='podcasts.audiofile')),
                ('categories', models.ManyToManyField(related_name='episodes', to='podcasts.category')),
                ('cover_images', models.ManyToManyField(blank=True, related_name='episode', to='podcasts.coverimage')),
                ('podcast', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='podcasts.podcast')),
                ('tags', models.ManyToManyField(related_name='episodes', to='podcasts.tag')),
            ],
        ),
        migrations.CreateModel(
            name='EpisodeReview',
            fields=[
                ('review_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='podcasts.review')),
                ('episode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='podcasts.episode')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('podcasts.review',),
        ),
        migrations.CreateModel(
            name='PodcastReview',
            fields=[
                ('review_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='podcasts.review')),
                ('podcast', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='podcasts.podcast')),
            ],
            options={
                'abstract': False,
                'base_manager_name': 'objects',
            },
            bases=('podcasts.review',),
        ),
    ]
